!!!
%html
  %head
    %title D#M

    %link{ :rel => 'stylesheet', :type => 'text/css', :href => '/css/style.css' }
    %link{ :rel => 'stylesheet', :type => 'text/css', :href => '/css/nv.d3.css' }

    %meta{ :name => 'viewport', :content => 'width=device-width, initial-scale=1, maximum-scale=1' }
    - unless @item.nil?
      %link{ :rel => 'alternate', :type => 'application/json+oembed', :href => ENV['MATH_DOMAIN'] + "/oembed?url=" + ENV['MATH_DOMAIN'] + "/item/#{@item.id.to_s}", :title => 'Math' }

  %body
    - unless @user.nil? || @page == 'oauth' || params[:embed]
      #sidebar
        %a#plus{ :href => '#' }

        %form{ :id => 'record_form', :method => 'POST', :action => '/records' }
          %input{ :type => 'text', :name => 'item_name', :id => 'item_name', :autocapitalize => 'off', :placeholder => 'Add an item' }
          %input.hide{ :type => 'text', :name => 'amount', :id => 'amount', :placeholder => 'Amount' }
          %input.hide{ :type => 'submit', :id => 'submit_item', :value => 'Save' }
          .clear

        %h3 Items
        %ul#items
          %li.hide Select an item
          - @user.items.order_by([[:updated_at, :desc]]).limit(10).each do |item|
            %li
              %a{ :href => '/item/' + item.id.to_s } #{item.name}

        %h3 Boards
        %ul#boards
          - @user.categories.order_by([[:updated_at, :desc]]).limit(10).each do |category|
            %li
              %a{ :href => '/categories/' + category.id.to_s } #{category.name}

        %form#board_form{ :action => '/categories' }
          %input{ :type => 'text', :name => 'board_name', :id => 'board_name', :placeholder => 'Add a board' }
          %input{ :type => 'submit', :value => 'Save' }

    = yield



    %script{ :type => 'text/javascript', :src => '/js/zepto.min.js' }
    %script{ :type => 'text/javascript', :src => '/js/FastClick.js' }
    %script{ :type => 'text/javascript', :src => '/js/d3.v2.min.js' }
    %script{ :type => 'text/javascript', :src => '/js/nv.d3.js' }
    %script{ :type => 'text/javascript', :src => '/js/keymaster.min.js' }



    - unless @user.nil?
      <!--[if lt IE 9]>
      <!-- For compatibility with older IEs -->
      <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7">
      <script src="/js/excanvas.min.js"></script>
      <![endif]-->


      :javascript
        var items = [];
        var records = {};

        window.addEventListener('load', function() {
          new FastClick(document.body);
        }, false);

        $(document).ready(function ($) {
          key.filter = function (event) {
            var tagName = (event.target || event.srcElement).tagName;
            return !(tagName == 'SELECT' || tagName == 'TEXTAREA');
          }

          function showSidebar() {
            $('body').addClass('sidebar');
          }
          function closeSidebar() {
            $('body').removeClass('sidebar');
          }

          //switch to record form with ` key
          key('=', function(e){
            e.preventDefault();

            showSidebar();
          })

          //switch to records list with escape
          key('esc', function(e){
            e.preventDefault();

            closeSidebar();
          })

          var item_form_timer = '';
          $('#record_form').bind('focusin', function (e) {
            clearTimeout(item_form_timer);

            $('#record_form').addClass('active')
            $('#items').addClass('active')
          }).bind('focusout', function (e) {
            item_form_timer = setTimeout(function () {
              $('#record_form').removeClass('active')
              $('#items').removeClass('active')
            }, 300)
          })

          var items = $('#items');
          items.find('a').bind('click', function (e) {
            if (items.hasClass('active')) {
              e.preventDefault();

              $('#item_name').val($(e.target).text());
              $('#amount').focus();
            }
          })

          isNumber = function (value) {
            if ((undefined === value) || (null === value)) {
              return false;
            }
            if (typeof value == 'number') {
              return true;
            }
            return !isNaN(value - 0);
          }

          //get items
          var chart;
          if ($('#records').length) {
            $.getJSON(
              '/api/1/users/#{@user.id.to_s}/items.json?accesskey=#{@user.accesskey.token.to_s}',
              function (e) {
                var values = '';


              $(e).each(function (i, item) {
                  $("<div class='record_display'><h2><a href='/item/" + item.id + "'>" + item.name + "</a></h2></div>").attr('id', 'chart_' + item.id).append("<svg style='height: 100px' />").appendTo('#records')

                  d3.json('/api/1/users/#{@user.id.to_s}/items/' + item.id + '/records.json?accesskey=#{@user.accesskey.token.to_s}', function(data) {
                    nv.addGraph(function() {
                      chart = nv.models.lineChart()
                                .width($('body').width() - 25)
                                .tooltipContent(function (key, x, y, e, graph) {
                                  var tooltip = [];

                                  if (key != '' && typeof key !== 'undefined') {
                                    tooltip.push('<p>' + key + '</p>');
                                  }

                                  tooltip.push('<p>' + y + ' at ' + x + '</p>');

                                  return tooltip;
                                });


                      chart.xAxis
                        .tickFormat(function(d) {
                          return d3.time.format('%_m/%d')(new Date(d * 1000))
                        });

                      chart.yAxis
                        .tickFormat(d3.format())

                      d3.select('#chart_' + item.id + ' svg')
                        .datum([return_values(data)])
                        .transition().duration(500)
                        .call(chart);

                      //TODO: Figure out a good way to do this automatically
                      nv.utils.windowResize(chart.update);

                      return chart;
                    });
                  })
                })
              }
            )
          } else if ($('#graph').length) {
            nv.addGraph(function() {
              var chart = nv.models.lineChart()
                        .width($('body').width() - 15)
                        .tooltipContent(function (key, x, y, e, graph) {
                          var tooltip = [];

                          if (key != '' && typeof key !== 'undefined') {
                            tooltip.push('<p>' + key + '</p>');
                          }

                          tooltip.push('<p>' + y + ' at ' + x + '</p>');

                          return tooltip;
                        });

              chart.xAxis
                .tickFormat(function(d) {
                  return d3.time.format('%_m/%d')(new Date(d * 1000))
                });

              chart.yAxis
                .tickFormat(d3.format(',.0f'))

              if (typeof graph_data['values'] === 'undefined') {
                graph_data = $.map(graph_data, function (item, i) {
                  return return_values(item, i);
                })
              } else {
                graph_data = [return_values(graph_data)];
              }

              d3.select('#graph svg')
                .datum(graph_data)
                .transition().duration(500)
                .call(chart);

              //TODO: Figure out a good way to do this automatically
              nv.utils.windowResize(chart.update);

              //append legend dots to the items table
              if (typeof category_id !== 'undefined') {
                $('table.records tbody tr').each(function(i, item) {
                  $(item).find('td').first().prepend("<td><span style='height:10px;width:10px;display:block;float:left;border-radius:5px;margin:5px 5px 0 0;background:" + graph_data[i].color + "'></span></td>")
                });
              }

              return chart;
            });
          }


          function return_values (data, i) {
            var key = data.key || '';

            var values = $(data.values).map(function(i, value) {
              if (isNumber(value[1])) {
                return { key: data.name, x: value[0], y: value[1] };
              }
            })

            var colors = [
              '#faa',
              '#f66',
              '#333',
              '#366',
              '#399',
              '#9cc'
            ];

            return {
              area: true,
              values: values,
              color: colors[i] || '#faa',
              key: key
            }
          }


          var toggle_sidebar = function () {
            if (!$('body').hasClass('sidebar')) {
              $('body').addClass('sidebar');
            } else {
              $('body').removeClass('sidebar');
            }
          }

          $('#plus').bind('mousedown touchstart', function (e) {
            e.preventDefault();

            toggle_sidebar();
            return false;
          })

          $('#record_form').bind('submit', function (e) {
            e.preventDefault();

            if ($('#record_form #amount').val() == '' || $('#record_form #item_name').val() == '') {
              return false;
            }

            $('#submit_item').val('Saving...').addClass('disabled')

            $.ajax({
              type: 'post',
              url: '/api/1/users/#{@user.id.to_s}/records',
              dataType: 'json',
              data: {
                accesskey:  '#{@user.accesskey.token.to_s}',
                item_name:  $('#record_form #item_name').val(),
                amount:     $('#record_form #amount').val()
              },
              success: function (e) {
                $('#amount').val('');
                $('#submit_item').val('Save').removeClass('disabled')
              },
              error: function () {
                $('#submit_item').val('Save').removeClass('disabled')
              }
            })
          })

          $('#board_form').bind('submit', function (e) {
            e.preventDefault();

            if ($('#board_form #name').val() == '') {
              return false;
            }

            $.ajax({
              type: 'post',
              url: '/api/1/users/#{@user.id.to_s}/categories',
              dataType: 'json',
              data: {
                accesskey:  '#{@user.accesskey.token.to_s}',
                name:  $('#board_form #board_name').val(),
              },
              success: function (data) {
                $('#board_name').val('');
                $('#boards').prepend('<li><a href="/categories/' + data.id + '">' + data.name + '</a></li>')

                if ($('#boards li').length >= 10) {
                  $('#boards li').last().remove()
                }
              }
            })
          })

          $('#settings_menu li a').bind('click', function (e) {
            e.preventDefault();

            $.ajax({
              type: 'put',
              url: '/api/1/users/#{@user.id.to_s}/items/' + item_id + '?accesskey=#{@user.accesskey.token.to_s}',
              data: {
                display_type: $(e.target).data('display-type'),
                display_frequency: $(e.target).data('display-frequency'),
              }
            })
          })

          $('#privacy_menu li a').bind('click', function (e) {
            e.preventDefault();

            $.ajax({
              type: 'put',
              url: '/api/1/users/#{@user.id.to_s}/items/' + item_id + '?accesskey=#{@user.accesskey.token.to_s}',
              data: {
                privacy: $(e.target).data('privacy')
              }
            })
          })

          $('#add_items').on('change', function () {
            $.ajax({
              type: 'post',
              url: '/api/1/users/4f68920ba85f1a0003000001/categories/' + category_id + '/items?accesskey=#{@user.accesskey.token.to_s}',
              data: { items: [$(this).val()] },
              success: function (data) {
                location.reload();
              }
            })
          });

          $('table.records a.delete_record').bind('click', function (e) {
            e.preventDefault();

            $.ajax({
              type: 'delete',
              url: '/api/1/users/#{@user.id.to_s}/items/' + item_id + '/records/' + $(e.target).attr('rel') + '?accesskey=#{@user.accesskey.token.to_s}',
              success: function () {
                $(e.target).parent().parent().remove()
              }
            })

            $.ajax({
              type: 'get',
              url: '/api/1/users/#{@user.id.to_s}/items/' + item_id + '/records.json?accesskey=#{@user.accesskey.token.to_s}',
              dataType: 'json',
              success: function (data) {
                d3.select('#graph svg')
                  .datum(return_values(data))
                  .transition().duration(0)
                  .call(chart);
              }
            })
          })
        })
